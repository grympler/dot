# Include a lot of configuration from: https://raw.githubusercontent.com/Zanoellia/dev_config/master/configuration_files/.gitconfig
[user]
	name = olivier.querne
    email = olivier.querne@deepomatic.com

[core]
    excludesfiles = .gitignore
    excludesfile = ~/.gitignore_global
	# Don't consider trailing space change as a cause for merge conflicts
	whitespace = -trailing-space

	# On a Linux system that uses LF line endings (OxOA, \n), you don’t
	# want Git to automatically convert them when you check out files;
	# however, if a file with CRLF endings accidentally gets introduced,
	# Git will convert CRLF to LF on commit but not the other way around
	autocrlf = input

	# Warn about whitespace issues: trailing  whitespaces and tab
	# indentation in a portion of a line.
	# Git will detect and try to color issues so you can fix them when:
	#   - Run a git diff command
	#   - Apply patches with git apply.
	#   - Use git rebase command
	whitespace = warn,trailing-space,tab-in-indent
	# Enable diff-so-fancy. Put an extra emphasis on the changed parts.
	pager = diff-so-fancy | less --tabs=4 -RFX

[color]
    diff = auto
    status = auto
    branch = auto
    ui = true

[pager]
	# Pre-seed your less pager with a search pattern, move between files
	# with n/N keys:
	# diff = diff-so-fancy | less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '

[color]
	# Enable colors in color-supporting terminals
	ui = auto

[push]
	# Push the current branch to its upstream branch but refuses to push if
	# the upstream branch’s name is different from the local one.
	default = simple

[alias]
    ci = commit
    co = checkout
    st = status
    br = branch
	s = status -s
	ds = diff --staged
	# See created commits by the last command. usage ex: git new HEAD
	new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
	rzc = reset HEAD^
	rzh = reset --hard HEAD
	rzma = reset --hard origin/master
	rzob = !CBR=$(git symbolic-ref --short HEAD) && git reset --hard origin/${CBR}
	sur = submodule update --init --recursive
	# list branches sorted by last modified
	b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
	ls = log --oneline
	lsn = log --oneline -n 10
	# List fetched commits with stats
	lc = log ORIG_HEAD.. --stat --no-merges
	lol = log --graph --pretty=tformat:'%C(yellow)%h%Creset -%C(auto)%d%Creset %s - %C(magenta)%an%Creset %C(green dim)- %ar%Creset'
	lola = log --graph --pretty=tformat:'%C(yellow)%h%Creset -%C(auto)%d%Creset %s - %C(magenta)%an%Creset %C(green dim)- %ar%Creset' --all
	can = commit --amend --no-edit
	# Display the name of the current branch
	cbr = symbolic-ref --short HEAD
	# For a raw diff to save as a patch for emailing or later application
	# which can then be used as `git patch > changes.patch`
	patch = !git --no-pager diff --no-color

[merge]
	tool = meld

[log]
	# Use abbrev SHAs whenever possible/relevant instead of full 40 chars
	abbrevCommit = true

[diff]
	# Following options are useless as long diff-so-fancy is used.
	# Use better, descriptive initials (c, i, w) instead of a/b.
	mnemonicPrefix = true
	# Show renames/moves as such
	renames = true
	# Better diffs with blank line boundaries for hunks.
	compactionHeuristic = true

[tag]
	# Sort tags as version numbers whenever applicable, so 1.10.2 is
	# AFTER 1.2.0.
	sort = version:refname

[help]
	# Git will give you 1.5 second to change your mind before executing the
	# autocorrected command.
	autocorrect = 15

[fetch]
	# Fetch will automatically remove any tracking references that no
	# longer exist.
	prune = true

[interactive]
	# Diffs shown by the interactive patch-staging tool also uses
	# diff-so-fancy
	# WARNING: troubles with UBUNTU 18
	diffFilter = diff-so-fancy | less --tabs=4 -RFX

# NOTES
#   - diff-highlight
#     - https://github.com/git/git/tree/master/contrib/diff-highlight
#     - diff-highlight dir is in ~/.git/ with chmod+x
#     - export PATH="$PATH::$HOME/.git/diff-highlight"
#   - diff-so-fancy
#     - https://github.com/so-fancy/diff-so-fancy
#     - diff-so-fancy dir in ~/.git/ with chmod+x
#     - export PATH="$PATH:$HOME/.git/diff-so-fancy"

# Useful links:
#   - https://jason.pureconcepts.net/2017/03/stop-aliasing-core-git-commands/
#   - https://git-scm.com/book/tr/v2/Customizing-Git-Git-Configuration
#   - https://gist.github.com/tdd/470582
#   - https://github.com/blog/2188-git-2-9-has-been-released#beautiful-diffs
#   - https://www.atlassian.com/blog/git/advanced-git-aliases

